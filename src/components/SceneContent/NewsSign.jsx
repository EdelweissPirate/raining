/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

function NewsSign(props) {
  const { nodes, materials } = useGLTF('/models/newsSign-transformed.glb')
  
  const refLight = useRef()
  const refLightMat = useRef()

  useFrame((state) => {
    refLight.current.scale.x =
    refLight.current.scale.y = 
    refLight.current.scale.z = .5 + Math.abs((.3) * Math.cos(state.clock.elapsedTime ))
    
    refLight.current.position.y = 1.5

    refLight.current.rotation.z += 0.05

    refLightMat.current.emissiveIntensity = Math.abs((10) * Math.cos(state.clock.elapsedTime))
  })
  
  return (
    <group {...props} dispose={null}>
      <mesh ref={refLight} geometry={nodes.Text.geometry} position={[1.8, 1, -4]} rotation={[Math.PI / 2, 0, 0]} scale={10}>
        <meshStandardMaterial ref={refLightMat} color={'#e7e7e7'} emissive={'#00ef00'} emissiveIntensity={4} toneMapped={false} transparent opacity={0.1} />
      </mesh>
    </group>
  )
}

// useGLTF.preload('/models/newsSign-transformed.glb')

export default NewsSign