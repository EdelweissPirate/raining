/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { Line, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

function Shelter(props) {
  const { nodes, materials } = useGLTF('/models/shelter-transformed.glb')
  
  const ref = useRef()
  const dripRef = useRef()

  useFrame(({ camera }) => {

    if(!dripRef.current.dripLength) dripRef.current.dripLength = 0.001
    if(!dripRef.current.yDrip) dripRef.current.yDrip = 15

    if(dripRef.current.dripLength < 4){
      dripRef.current.dripLength += 0.4 * Math.random()
    }

    // dripRef.current.scale.y = dripRef.current.dripLength

    if(dripRef.current.dripLength >= 4){
      dripRef.current.scale.y = 1
      dripRef.current.yDrip -= 3 * Math.random()
    }

    if(dripRef.current.yDrip < -15){
      dripRef.current.yDrip = 15
      dripRef.current.dripLength = 0
      dripRef.current.scale.y = 0
    }

    dripRef.current.position.y = dripRef.current.yDrip
  })

  return (
    <group {...props} ref={ref} position={[-2.2, 1.2, -4.5]} dispose={null} scale={0.08}>
      <group>
        <mesh castShadow receiveShadow geometry={nodes.Osta_1.geometry} material={materials.Build11} />
        <mesh castShadow receiveShadow geometry={nodes.Osta_2.geometry}>
          <meshStandardMaterial color={'aliceblue'} transparent opacity={0.1} />
        </mesh>
        <mesh castShadow receiveShadow geometry={nodes.Osta_3.geometry} material={materials.bench} />
        <Line
          ref={dripRef}
          position={[0, 0, 0]}
          points={[[-18, 9.5, 10], [-18, 6.5, 10]]}
          color={'#e7e7e7'}
          lineWidth={1.5}
          dashed={false}
          rotation={[0, 0, 180*Math.PI/180]}
        />
      </group>
    </group>
  )
}

// useGLTF.preload('/models/shelter-transformed.glb')

export default Shelter